******************************************************************************

RUNNING PROGRAM: FILTER DIAGONALIZATION
This calculation began at: Tue Mar  4 03:52:06 2025

Printing from root node 0
******************************************************************************


******************************************************************************

1.	INITIALIZING JOB | Tue Mar  4 03:52:06 2025


******************************************************************************

Reading job specs from input.par:

	Grid parameters (preliminary):
	------------------------------
	nx = 212, ny = 212, nz = 212
	dx = 0.5, dy = 0.5, dz = 0.5
	ngrid = 9528128 nspin = 2
	Nanocrystal COM will be centered at the origin

	Pseudopotential options:
	--------------------------
	Strain dependent pseudopotential will NOT be calculated
	Pseudopotential parameters will not be interpolated
	Pseudopotentials are short ranged.
	Crystal structure: unknown
	Outmost material: unknown
	Surface Cs atoms NOT rescaled for charge balancing
	Projector functions will be generated on the fly

	Parameters & counters for filter algorithm:
	-------------------------------------------
	nFilterCycles (# random initial states) = 64
	nFilterPerRank (# states per MPI rank) = 1
	mStatesPerFilter (# energy targets) = 22
	nCheby = 8192
	VBmin = -0.245, VBmax = -0.231
	CBmin = -0.158, CBmax = -0.144
	KEmax = 20 a.u.
	fermiEnergy = -0.19 a.u.
	setNumEnergyTargets flag on: n_targets_VB = 12 n_targets_CB = 10
	Random seed will be generated based on clock at runtime
	Energy range will be approx'd using only local potential
	printPsiFilt is on. psi-filt.dat and psi-filt.cube files will be printed
	Orthogonalized wavefunctions will not be output to disk
	FFT wisdom stored in directory: 

	Parameters for parallelization:
	-------------------------------
	MPI_SIZE (# MPI ranks) = 64
	nThreads (# OMP threads/rank) = 128
	ham_threads = 16

	Parameters for spin-orbit and non-local:
	----------------------------------------
	Spinor wavefunctions turned ON!
	Spin-orbit coupling is ON!
	Non-local potential is ON!
	Rnlcut = 4.10067 Bohr
	Wavefunctions are COMPLEX valued! complex_idx = 2
	Wavefunctions will NOT be time reversed before ortho!
	  t_rev_factor = 1

	Flags for optional output:
	--------------------------
	Matrix elements of the potential will not be calculated
	Eigenstates with variance above 1 a.u. will not be saved to disk
	Hamiltonian timing specs will be printed
	Cube files of top 2 states (sigma_E_cut < 1) in VB & CB will be printed
	Spin and Ang. Mom. statistics will not be computed

	Flags for restarting computation:
	---------------------------------
	Filter will NOT restart if no eigenstates obtained after diag.
	Filter will save checkpoints along the job run
	Filter will restart from checkpoint 0

Reading atomic coords from conf.par:
	natoms = 2240
	n_atom_types = 2
	the atoms are [   I  Pb ]
	n_NL_atoms = 2240

Initializing the grid parameters:
	Min. required box dimension for each direction (Bohr):
	-----------------------------------------------------
	xd = 106.00 yd = 106.00 zd = 106.00
	The x_min = -53 and x_max 52.5
	The y_min = -53 and y_max 52.5
	The z_min = -53 and z_max 52.5

	Final grid parameters:
	----------------------
	xmin = -53.000000 ymin = -53.000000 zmin = -53.000000
	dx = 0.5 dy = 0.5 dz = 0.5 dv = 0.125 dr = 0.866025
	nx = 212  ny = 212  nz = 212
	ngrid = 9528128, nspin = 2, nspinngrid = 19056256

Building the r- and k-space grids:
	Building the grid...
	Count max no. grid points in Rnlcut of an atom
	n_NL_gridpts = 2330

Setting the filter energy targets:
	Spacing between states in VB: 0.00116667 a.u.
	Spacing between states in CB: 0.0014 a.u.

	Energy target list:
	-------------------
	-0.243833
	-0.242667
	-0.2415
	-0.240333
	-0.239167
	-0.238
	-0.236833
	-0.235667
	-0.2345
	-0.233333
	-0.232167
	-0.231
	-0.158
	-0.1566
	-0.1552
	-0.1538
	-0.1524
	-0.151
	-0.1496
	-0.1482
	-0.1468
	-0.1454

Allocating memory for pot, psi, eig_vals...
	done allocating memory.

Initializing potentials...

Local pseudopotential:
	Reading atomic pseudopotentials...
	potI.par potPb.par 
	Reading SO & non-local pot parameters
	Constructing total pseudopotential on the grid...
	Vmin = -1.2997 Vmax = 0.742843 dV = 2.04255 

Spin-orbit pseudopotential:
	SO projectors generated.

Non-local pseudopotential:
	NL projectors generated.


******************************************************************************

2. CALCULATING HAMILTONIAN ENERGY RANGE | Tue Mar  4 04:08:31 2025


******************************************************************************

Approximating energy range of Hamiltonian as [Vmin, Vmax + KE_max]
Emin = -1.07964, Emax = 28.4914, dE = 29.5711

Done w calc energy range, CPU time (sec) 0.000997, wall run time (sec) 0


******************************************************************************

3. GENERATING COEFFICIENTS | Tue Mar  4 04:08:31 2025


******************************************************************************

  ncheby = 8192 dt = 12279.1 dE = 29.5711
  Energy width, sigma, of filter function = 0.00638119 a.u.
  Suggested max span of spectrum for filtering = 0.140386 a.u.
  Requested span of spectrum to filter = 0.0254333 a.u.

Initializing random filter states

Timing Hamiltonian operator... | Tue Mar  4 04:08:40 2025

	Kinetic energy: 176.2 (msec)
	Spin-Orbit potential: 160.3 (msec)
	Non-local potential: 130.8 (msec)
	Local potential: 27.96 (msec)
Done timing Hamiltonian | Tue Mar  4 04:08:53 2025



******************************************************************************

4. RUN FILTER CYCLE | Tue Mar  4 04:08:53 2025


******************************************************************************

  4.1 Running filter cycle
  Random psi 1 / 1 | Tue Mar  4 04:08:53 2025

	  [                ]   0% | Tue Mar  4 04:08:54 2025

	  [####            ]  25% | Tue Mar  4 04:39:45 2025

	  [########        ]  50% | Tue Mar  4 05:10:40 2025

	  [############    ]  75% | Tue Mar  4 05:41:36 2025

	  [############### ] 100% | Tue Mar  4 06:12:26 2025


  4.3 Normalizing filtered states

  4.4 Computing the energies of all filtered states

done calculating filter, CPU time (sec) 118788, wall run time (sec) 7498
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
Allocating mem for psitot
Gathering psitot from all mpi_ranks
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
INT MAX = 2147483647
Size of psi_rank < INT_MAX; Calling MPI_Gather
